$(document).ready(function() {
  //Прелоадер
  $(function() {
    var imgs = [],
        percents = 1;

    $('*').each(function() {
      var $this = $(this),
          img = $this.is('img'),
          background = $this.css('background-image');

      if (background != 'none') {
        var path = background.replace('url(','').replace(')','');
        if (path[0] === '"' || path[0] === '\'') {
          path = path.substr(1);
        }
        if (path[path.length-1] === '"' || path[0] === '\'') {
          path = path.substring(0,path.length-1);
        }
        if (path) {
          imgs.push(path);
        }
      }

      if (img) {
        var path = $this.attr('src');
        if (path) {
          imgs.push(path);
        }
      }
    });
    for (var i = 0; i < imgs.length; i++) {
      var image = $('<img>', {
        attr: {
          src: imgs[i]
        }
      });
      image.load(function() {
        setPercents(imgs.length, percents);
        percents++;
      });
    }

    function setPercents(total, current) {
      var percent = Math.ceil(current / total * 100);
      $('.preloader__text').text(percent + '%');
      if (percent >= 100) {
        $('.wrapper').css('display', 'block');
        $('.inner-wrapper').css('display', 'block');
        $('.preloader').css('display', 'none');
        setTimeout(function() {
          $('.flipper').removeClass('flipper--unload');
        }, 400);
      }
    }

  });
  //Якорный переход
  $('.anchor-link').on('click', function(e) {
    e.preventDefault();
    var id = $(this).attr('href'),
        top = $(id).offset().top;
    $('body, html').animate({
      scrollTop: top
    }, 1500);
  });
});
window.onload = function() {
  //Авторизация
  if(document.querySelector("#loginForm")) {
    var btn = document.querySelector("#loginFormBtn");
    var authBtn = document.getElementById("authModalBtn");
    var authModal = document.getElementById("authModal");
    var authArea = document.getElementById("authArea");
    var parentElem = authModal;
    var childElem = document.createElement("span");
    childElem.innerHTML = "Прочь, железяка!"
    authBtn.addEventListener("click", function(e) {
      e.preventDefault();
      authModal.classList.remove("active");
      authArea.classList.remove("active");
      parentElem.removeChild(childElem);
    });
    btn.addEventListener("click", function(e) {
      var login = document.querySelector("#formLogin").value;
      var pass = document.querySelector("#formPass").value;
      var check = document.querySelector("#captcha").checked;
      var radio = document.querySelector("#captcha-radio-yes").checked;
      console.log(document.querySelector("#captcha").checked, document.querySelector("#captcha-radio-yes").checked);
      if(radio && check) {
        var data = {
          "login": login,
          "pass": pass,
          "check": check,
          "radio": radio
        };
        $.ajax({
          url: '/auth',
          type: 'POST',
          data: JSON.stringify(data),
          cache: false,
          processData: false,
          contentType: 'application/json; charset=utf8',
          dataType: 'json',
          success: function(data, status) {
            if(data.isValid) {
              location = "/admin.html";
            } else {
              authModal.classList.add("active");
              authArea.classList.add("active");
              parentElem.appendChild(childElem);
              childElem.innerHTML = "Неверный логин или пароль!";
            }
          }
        });
      } else {
        authModal.classList.add("active");
        authArea.classList.add("active");
        parentElem.appendChild(childElem);
      }
    });
  }

  //Slider init and post
  if (document.getElementById("slider")) {
    var current = document.querySelectorAll(".slider__current-item");
    var descr = document.querySelectorAll(".slider__description-item");
    var downBtn = document.querySelectorAll("#downBtn .thumbnail__item");
    var upBtn = document.querySelectorAll("#upBtn .thumbnail__item");

    current[1].classList.add("slider__current-item--active");
    descr[1].classList.add("slider__description-item--active");
    $(descr[1]).css('z-index', '5');
    downBtn[0].classList.add("thumbnail__item--active");
    upBtn[2].classList.add("thumbnail__item--active");

    //Почта
    function clearMail() {
      document.getElementById("letterName").value = "";
      document.getElementById("letterEmail").value = "";
      document.getElementById("letterText").value = "";
    };
    var mailBtn = document.getElementById("letterBtn");
    var clearBtn = document.getElementById("clearBtn");
    mailBtn.addEventListener("click", function() {
      var patternEmail = /^[-\w.]+@([A-z0-9][-A-z0-9]+\.)+[A-z]{2,4}$/;
      var mail = {
          "name": document.getElementById("letterName").value,
          "email": document.getElementById("letterEmail").value,
          "text": document.getElementById("letterText").value
        };
      if (patternEmail.test(mail.email)) {
        var xhr = new XMLHttpRequest();
        xhr.open("POST", '/mail');
        xhr.setRequestHeader('Content-Type', 'application/json; charset=utf8');
        xhr.send(JSON.stringify(mail));
        clearMail();
      } else {
        console.log("неправильно ввёл email!");
      }
    });
    clearBtn.addEventListener("click", function() {
      clearMail();
    });
    
  }
  //Заполнение скилов
  if (document.getElementById("forest-map")) {
    (function() {
      var techs = [
            'html',
            'css',
            'js',
            'php',
            'nodejs',
            'mongodb',
            'git',
            'gulp',
            'bower'
          ];
      techs.forEach(function(item){
        var name = ".graph__fill--"+item;
        var graph = document.querySelector(name);
        var fill = graph.getAttribute("data-fill");
        fill = 282.5 - (fill * 2.825);
        graph.style.cssText = "--offset: "+fill;
      });
    }());
  }

  var blog = !!document.getElementById("titlesWrapper");
  //Копирование меню и вставка его в выпадающее
  if (blog) {
    $("#titlesWrapper .titles__list").clone().appendTo("#fixed");
    $("<a>").addClass("titles__btn").appendTo("#fixed");
    $("#fixed .titles__item:nth-child(1)").addClass("titles__item--active");
    $("#static .titles__item:nth-child(1)").addClass("titles__item--active");
  }
  //Авторизация и фулскрин меню
  (function() {
    var card = document.getElementById("indexContainer"),
        authBtn = document.getElementById("authorizationBtn"),
        hamburger = document.getElementById("hamburger"),
        menu = document.getElementById("menu"),
        clickArea = document.getElementById("clickArea");
    //Переворот на главной
    if (authBtn) {
      clickArea.onclick = function() {
        card.classList.toggle("index-container--flip");
        authBtn.classList.toggle("authorization-btn--clicked");
        clickArea.classList.toggle("click-area--display");
      };
      authBtn.onclick = function() {
        card.classList.toggle("index-container--flip");
        authBtn.classList.toggle("authorization-btn--clicked");
        clickArea.classList.toggle("click-area--display");
      }
    }
    //Фулскрин меню
    if (hamburger) {
      hamburger.onclick = function(e) {
        var list;
        if (document.getElementsByClassName("menu__list")[0]) {
          list = document.getElementsByClassName("menu__list")[0];
        }
        e.preventDefault();
        menu.classList.toggle("menu--active");
        if (hamburger.classList.contains('hamburger--transformed')) {
          list.classList.toggle('menu__list--active');
        } else {
          setTimeout(function() {
            list.classList.toggle('menu__list--active');
          }, 500);
        }
        hamburger.classList.toggle("hamburger--transformed")
      }
    }
  }());
  //Слайдер
  (function() {
    //Переменные слайдера
    var downBtn = $("#downBtn");
    var upBtn = $("#upBtn");
    var slide = $("#slide");
    var description = $("#slideDescr");
    var counterDown = 0;
    var counterUp = 2;
    var counterSlide = 1;
    //Все элементы
    var itemsDown = downBtn.find('.thumbnail__item'),
        itemsUp = upBtn.find('.thumbnail__item'),
        itemsSlide = slide.find('.slider__current-item'),
        itemsDescr = description.find('.slider__description-item');
    //Обработчик кнопки вниз
    downBtn.on('click', function() {
      //Декремент счётчиков
      counterDown--;
      counterUp--;
      counterSlide--;
      //Функция для смены слайда
      function toggleSlide() {
        //Скрытие активного слайда
        activeItemSlide.fadeOut(700);
        //Появление требуемого слайда
        reqItemSlide.fadeIn(700);
        //Удаление класса у бывшего активного слайда
        activeItemSlide.removeClass('slider__current-item--active').css('opacity', '0');
        //Добавление активного класса требуемому слайду
        reqItemSlide.addClass('slider__current-item--active');
        //Добавление требуемому описанию слайда активного класса
        reqItemDescr.addClass('slider__description-item--active').css('z-index', '5');
        //Удаление класса у активного описания слайда
        activeItemDescr.removeClass('slider__description-item--active').css('z-index', '0');
      }
      //Активные элементы
      var activeItemDown = downBtn.find('.thumbnail__item--active'),
          activeItemUp = upBtn.find('.thumbnail__item--active'),
          activeItemSlide = slide.find('.slider__current-item--active'),
          activeItemDescr = description.find('.slider__description-item--active');
      //Если счётчики меньше нуля обновить
      if (counterDown < 0) counterDown = itemsDown.length-1;
      if (counterUp < 0) counterUp = itemsUp.length-1;
      if (counterSlide < 0) counterSlide = itemsUp.length-1;
      //Требуемые элементы
      var reqItemDown = itemsDown.eq(counterDown),
          reqItemUp = itemsUp.eq(counterUp),
          reqItemSlide = itemsSlide.eq(counterSlide),
          reqItemDescr = itemsDescr.eq(counterSlide);
      //Скрытие активных миниатюр
      activeItemDown.animate({
        'top': '100%'
      }, 300);
      activeItemUp.animate({
        'top' : '-100%'
      }, 300);
      //Смена слайда
      toggleSlide();
      //Появление требуемых миниатюр
      reqItemDown.animate({
        'top' : '0'
      }, 300, function() {
        activeItemDown.removeClass('thumbnail__item--active').css('top', '-100%');
        reqItemDown.addClass('thumbnail__item--active');
      });
      reqItemUp.animate({
        'top' : '0'
      }, 300, function() {
        activeItemUp.removeClass('thumbnail__item--active').css('top', '100%');
        reqItemUp.addClass('thumbnail__item--active');
      });
    });
    //Обработчик кнопки вверх
    upBtn.on('click', function() {
      //Инкремент счётчиков
      counterDown++;
      counterUp++;
      counterSlide++;
      //Функция для смены слайда
      function toggleSlide() {
        //Скрытие активного слайда
        activeItemSlide.fadeOut(700);
        //Появление требуемого слайда
        reqItemSlide.fadeIn(700);
        //Удаление класса у бывшего активного слайда
        activeItemSlide.removeClass('slider__current-item--active').css('opacity', '0');
        //Добавление активного класса требуемому слайду
        reqItemSlide.addClass('slider__current-item--active');
        //Добавление требуемому описанию слайда активного класса
        reqItemDescr.addClass('slider__description-item--active').css('z-index', '5');
        //Удаление класса у активного описания слайда
        activeItemDescr.removeClass('slider__description-item--active').css('z-index', '0');
      }
      //Активные элементы
      var activeItemDown = downBtn.find('.thumbnail__item--active'),
          activeItemUp = upBtn.find('.thumbnail__item--active'),
          activeItemSlide = slide.find('.slider__current-item--active'),
          activeItemDescr = description.find('.slider__description-item--active');
      //Обнуление счётчиков, если уходят за пределы
      if (counterUp >= itemsUp.length) {
        counterUp = 0;
      }
      if (counterDown >= itemsDown.length) counterDown = 0;
      if (counterSlide >= itemsDown.length) counterSlide = 0;
      //Требуемые элементы
      var reqItemDown = itemsDown.eq(counterDown),
          reqItemUp = itemsUp.eq(counterUp),
          reqItemSlide = itemsSlide.eq(counterSlide),
          reqItemDescr = itemsDescr.eq(counterSlide);
      //Скрытие активных миниатюр
      activeItemDown.animate({
        'top': '100%'
      }, 300);
      activeItemUp.animate({
        'top' : '-100%'
      }, 300);
      //Смена слайда
      toggleSlide();
      //Появление требуемых миниатюр
      reqItemDown.animate({
        'top' : '0'
      }, 300, function() {
        activeItemDown.removeClass('thumbnail__item--active').css('top', '-100%');
        reqItemDown.addClass('thumbnail__item--active');
      });
      reqItemUp.animate({
        'top' : '0'
      }, 300, function() {
        activeItemUp.removeClass('thumbnail__item--active').css('top', '100%');
        reqItemUp.addClass('thumbnail__item--active');
      });
    });
  }());
  //Сайдбар в блоге
  if (blog) {
    var itemsFixed = $("#fixed .titles__item"),
        itemsStatic = $("#static .titles__item"),
        articles = $(".articles .article");
    //Обработчик всех ссылок
    itemsStatic.on("click", function() {
      var index = $(this).index(),
          top = articles.eq(index).offset().top;
      if (articles.length-1 === index) {
        $('body, html').animate({
          scrollTop: articles.eq(index).offset().top + articles.eq(index).height() - $(window).height()
        }, 1000);
      } else {
        $('body, html').animate({
          scrollTop: top
        }, 1000);
      }
    });
    itemsFixed.on("click", function() {
      var index = $(this).index(),
          top = articles.eq(index).offset().top;
      if (articles.length-1 === index) {
        $('body, html').animate({
          scrollTop: articles.eq(index).offset().top + articles.eq(index).height() - $(window).height()
        }, 1000);
      } else {
        $('body, html').animate({
          scrollTop: top
        }, 1000);
      }
    });
  }
  $(window).scroll(function() {
    var scroll = $(window).scrollTop(),
        menu = $("#titlesWrapper"),
        sideBar = $("#static"),
        menuFixed = $("#fixed"),
        stickyStart,
        articles = $(".articles .article"),
        itemsFixed = menuFixed.find(".titles__item"),
        itemsStatic = sideBar.find(".titles__item"),
        activeItemFixed = menuFixed.find(".titles__item--active"),
        activeItemStatic = sideBar.find(".titles__item--active");
    if (blog) {
      //Вычисление положения начала прилипания
      stickyStart = sideBar.offset().top + 10;
      //Если прокрутка больше положения меню и меню еще не зафиксировано, то зафиксировать
      if (scroll >= stickyStart && !(menu.hasClass('titles__wrapper--fixed'))) menu.toggleClass('titles__wrapper--fixed');
      //Если прокрутка меньше положения меню и меню зафиксировано, то вернуть статик
      if (scroll < stickyStart && menu.hasClass('titles__wrapper--fixed')) menu.toggleClass('titles__wrapper--fixed');
      //Подсвечивание текущей статьи
      (function() {
        var itemOffset = {
              value: 0,
              index: 0
            },
            offsetsMas = [];
        //Создание массива с отступами всех элементов
        for (var i = 0; i < articles.length; i++) offsetsMas.push($(articles[i]).offset().top-50);
        //Объект содержит самый большой отступ из статей, отступ которых меньше текущего скролла
        for (var i = 0; i < articles.length; i++) {
          if (offsetsMas[i] > itemOffset.value && offsetsMas[i] <= scroll) {
            itemOffset.value = offsetsMas[i];
            itemOffset.index = i;
          }
        }
        //Дополнительное условие для последней статьи
        if (scroll+$(window).height() >= $(articles[offsetsMas.length-1]).offset().top+$(articles[offsetsMas.length-1]).height()) {
          itemOffset.value = offsetsMas[offsetsMas.length-1];
          itemOffset.index = offsetsMas.length-1;
        }
        //Удаление класса у активного элемента
        activeItemFixed.removeClass('titles__item--active');
        activeItemStatic.removeClass('titles__item--active');
        //Добавление активного класса нужному элементу
        $(itemsFixed[itemOffset.index]).addClass('titles__item--active');
        $(itemsStatic[itemOffset.index]).addClass('titles__item--active');
      }());
    }
  });
  //Выпадающий сайдбар в блоге
  (function(){
    var menuFixed = $("#fixed"),
        menuBtn = menuFixed.find('.titles__btn'),
        clickArea = $("#titlesClickArea");
    menuBtn.on('click', function(){
      clickArea.toggleClass('titles-click-area--active');
      menuFixed.toggleClass('titles--active');
    });
    clickArea.on('click', function(){
      clickArea.toggleClass('titles-click-area--active');
      menuFixed.toggleClass('titles--active');
    });
  }());
};
//# sourceMappingURL=data:application/json;base64,

//# sourceMappingURL=data:application/json;base64,
